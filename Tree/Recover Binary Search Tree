//https://leetcode.com/problems/recover-binary-search-tree/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
      TreeNode A = null, B =null;
    TreeNode prev = null;
    public boolean recoverTree_(TreeNode root) {
        if(root == null) return false;

        if(recoverTree_(root.left)) return true;
        if(prev != null && prev.val > root.val){
            B = root;
            if(A == null) A = prev;
            else return true;
        }
        
        prev = root;
        if(recoverTree_(root.right)) return true;
        
        return false;
    }

    
    public void recoverTree(TreeNode root) {

        recoverTree_(root);
        if(A!=null){
            int temp = A.val;
            A.val = B.val;
            B.val = temp;
        }
    
    }
}
